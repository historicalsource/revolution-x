**************************************************************************
*                                                                        *
* 		ToddView Structure Declarations				 *
*                                                                        *
**************************************************************************
;* PLANE TABLE STRUCT

;FOLLOWING STRUCTURE IS FOR MISCELLANEOUS EQUATES THAT MUST BE KNOWN
*STRUCT MISC
PLNSIZ	EQU	>F0	;size of PLANE STRUCTURE
*ENDSTRUCT

*STRUCT PLANE
P_LSTHD	EQU	0  	;UHL ptr to head of OBJECT LIST
P_LSTTL	EQU	>20	;UHL ptr to tail of OBJECT LIST
P_XPOS	EQU	>40	;UHL World Top Left X of OBJECT LIST
P_YPOS	EQU	>60	;UHL World Top Left Y
P_XYOFF	EQU	>80	;UHL Y:X integer temporary offset for shaking
P_XRATE	EQU	>A0	;UHL SCROLLX multiplier for plane
P_ZMIN	EQU	>C0	;UHW Maximum Z to stay on plane
P_YBOT	EQU	>D0	;UHW Bottom Y Coor for plane
P_FLAGS	EQU	>E0	;UHW Flag bits for plane
*ENDSTRUCT

;**** LSTHD, LSTTL offsets above must match OLINK, OBLINK offset of OBJ ****

;*OBJECT BLOCK LAYOUT
*STRUCT	OBJ
OLINK	EQU	00H   	;UHL Link to next object block
OBLINK	EQU	020H	;UHL Back Link to previous obj
OSLINK	EQU	040H	;UHL Supplemental lists (OID class)
OSHAD	EQU	060H 	;UHL ptr to shadow
OPLINK	EQU	080H  	;UHL Link to controlling process
OCVECT	EQU	0A0H	;UHL vector to collision table
OGUNVECT EQU	0C0H	;UHL vector to gun collision handler
OPART1	EQU	0E0H	;UHL ptr to head of multi-part obj
OPARTS	EQU	0100H  	;UHL linked list of multi-parts
OZVEL	EQU	0120H	;SHL Z VELOCITY 16.16
OXVEL	EQU	0140H   ;SHL
OYVEL	EQU	0160H   ;SHL
OYACCEL	EQU	0330H	;SHW just the fraction for Grav
OXVAL	EQU	0180H	;SHL BIT X POSITION
OXFRAC	EQU	0180H	; Fractional portion of X position
OXPOS	EQU	0190H	; Integer portion of X position
OYVAL	EQU	01A0H   ;SHL BIT Y POSITION
OYFRAC	EQU	01A0H   ; Fractional portion of Y position
OYPOS	EQU	01B0H   ; Integer portion of Y position
OZVAL	EQU	01C0H	;UHL Z POSITION
OZFRAC	EQU	01C0H   ; Fractional portion of Z position
OZPOS	EQU	01D0H   ; INTEGER Z position of object
OPARTSXY EQU	01E0H	;UHL multi part position offset
; ----> OANIOFF IS SCALED
OANIOFF	EQU	0200H   ;UHL ADJUSTED ANIMATION OFFSET
OANIOFFX EQU	0200H   ; X ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
OANIOFFY EQU	0210H   ; Y ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
;NEW	From OFSET to OSCALE, DO NOT CHANGE ORDER!
;		(used for mass register input to clip loop)
OFSET	EQU	0220H	;UHW PRECOMPUTED OFFSET
OCTRL	EQU	0230h	;UHW DMA #2 CONTROL WORD
OSAG	EQU	0240H  	;UHL SOURCE ADDRESS (UNCLIPPED, ADJUSTED FOR FLIPS)
ODAG	EQU	0260h	;UHL Screen Pos (saved as intermediate step in DISPLAY! NEW)
OUSIZE	EQU	0280h	;UHL DMA #2 UNSCALED SIZE
OUSIZEX	EQU	0280h	; X-SIZE
OUSIZEY	EQU	0290h	; Y-SIZE
; ----> OSIZE IS SCALED
OSIZE	EQU	02a0H	;UHL H,W OF OBJECT (16,16)	W=ADJUSTED FOR MORSEL
OSIZEX	EQU	02a0H	; X SIZE
OSIZEY	EQU	02b0H	; Y SIZE
OPAL	EQU	02c0H   ;UHW B(0-15) PALETTE; B(16-31) CONSTANT COLOR
OCONST	EQU	02d0H	;UHW CONSTANT COLOR
OSCALE	EQU	02e0h	;UHL DMA #2 SCALE
OSCALEX	EQU	02e0h	; X-SCALE
OSCALEY	EQU	02f0h	; Y-SCALE
OIMG	EQU	0300H	;UHL Pointer to image data table
; the following was 04F0H
OPLANE	EQU	0340H	;index into plane table (REMOVE!!)
OTIME	EQU	0320H	;TIME of creation
OXBASE	EQU	0340H	;base velocity for doing adjusted sleeps
OZBASE	EQU	0360H	;base velocity for doing adjusted sleeps
OVAR1	EQU	0380H	; #  OVARS scratch space for system routines
OVAR2	EQU	03a0H	;
AnimFrm	EQU	03a0H	;UHL Animation frame pointer	(OVAR2)
OVAR3	EQU	03c0H	;
AnimScr	EQU	03c0H	;UHL Animation script start ptr	(OVAR3)
OVAR4	EQU	03e0H	;
AnimSLP	EQU	03e0H	;UDB Animation replace sleep	(OVAR4)
AnimSlp	EQU	03e8H	;UDB Animation tiks 'til next	(OVAR4+8)
AnimLoop EQU	03f0H	;UDB Animation loop counter	(OVAR4+16)
OVAR5	EQU	0400H	; @used by
OVAR6	EQU	0420H	;UHL @	FlashWyt
OVAR7	EQU	0440H	; 2nd byte used for MULTI-PART Z alignment (OZOFF)
OPARTID	EQU	0440H	;UHB # of part in multi-parter, stuffed by MULTIMAKE
OZOFF	EQU	0448H	;UHB Z offset from OZVAL of head part
OVAR8	EQU	0460H	; used as AnimArg
OVAR9	EQU	0480H	; #USED FOR PLAYER DATA AREA PTR (OPLAYER)
;
OFLAGS	EQU	04a0H   ;UHW General purpose flags
OID	EQU	04b0H  	;UHW Object ID
;OSCALE	EQU	04a0h	;UHL DMA #2 SCALE
;OSCALEX	EQU	04a0h	; X-SCALE
;OSCALEY	EQU	04b0h	; Y-SCALE
;OUSIZE		EQU	04B0h	;UHL DMA #2 UNSCALED SIZE
;OUSIZEX	EQU	04B0h	; X-SIZE
;OUSIZEY	EQU	04C0h	; Y-SIZE
OUANIOFF EQU	04c0h   ;UHL UNSCALED ANIMATION OFFSET
OUANIOFFX EQU	04c0h   ; X ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
OUANIOFFY EQU	04d0h   ; Y ANIMATION OFFSET FROM TOP LEFT ADJUSTED FOR FLIP
OIHOFF	EQU	04e0h	;UHW OFFSET TO IMAGE HEADER	; NEW
ONOT_SORTED	EQU	04f0h	;UHW If <> 0, then object is out of order
OULINK	EQU	OVAR7	;UHL
ODATA		EQU	0500h	; SCRATCH SPACE FOR USER ROUTINES
OPROJECT_PARENT	0690H	;UHL
ODATAX  	EQU	0700H	; = 0500H + 0200H
*ENDSTRUCT

;OBSIZ	EQU   	560H	;Object Block Size
;OCLRSIZ EQU	ODATA	;GETOBJ WILL CLEAR UPTO AND NOT INCLUDING HERE
;NOBJ	EQU   	350	;OBJECTS TO DISPLAY
;***** MISCELLANEOUS OFFSETS
;OPARTID EQU	OVAR7	;UHB # of part in multi-parter, stuffed by MULTIMAKE
;OPLAYER	EQU	OVAR9
;OZOFF	EQU	OVAR7+8
;OGRNDOFF EQU	OVAR7+010H ;SDB offset to ground for GROUNDCOLL
;AnimArg EQU	OVAR8	;stuffed by AnimP for use by GETAFARG_xxxx
;**** OFFSETS for ANIM

*STRUCT	ANIM+OBJ
AnimNxt EQU	OVAR1	;UHL	link to next obj of Animy linked list
AnimFrm EQU	OVAR2	;UHL	ptr to current animation frame
AnimScr EQU	OVAR3	;UHL	ptr to animation script
AnimSLP EQU	OVAR4	;UDB	reset value for AnimSlp
AnimSlp EQU	OVAR4+8	;UDB	# tiks before next ANI
AnimLoop EQU	OVAR4+16 ;UDB	General purpose Loop counter
AnimOpen EQU	OVAR4+24 ;UDB	reserved for future definition (keep cleared)
*ENDSTRUCT
*
*PROCESS DATA STRUCTURE
*STRUCT	PRC
PLINK	EQU	0	;UHL LINK TO NEXT 32 BITS
PROCID	EQU	>20	;UHW PROCESS ID 16 BITS
PTIME	EQU	>30	;UHW SLEEP TIME X 16MSEC 16 BITS
PWAKE	EQU	>E0	;UHL
PA8	EQU	>C0	;UHL
PA9	EQU	>A0	;UHL
PA10	EQU	>80	;UHL
PA11	EQU	>60	;UHL
PSPTR	EQU	>40	;UHL PROCESS STACK POINTER 32 BITS
PDATA	EQU	>100	;UHL PROCESS DATA STORE
PSDATA	EQU	>500	;UHL PROCESS STACK DATA
PTEMP1	EQU	PSDATA->A0	;UHL	;PROCESS TEMPORARY STORE AREAS
PTEMP2	EQU	PSDATA->80	;UHL
PTEMP3	EQU	PSDATA->60	;UHL
PTEMP4	EQU	PSDATA->40	;UHL
PCTIME	EQU	PSDATA->20	;UHW PROCESS CREATION TIME (DEBUGGING)
PCOMM	EQU	PSDATA->10	;UHW PROCESS COMMUNICATION AREA
*ENDSTRUCT

*UNIVERSE LINKED LIST STRUCTURE
*struct	BGLINK
MAP_IMG		.EQU	0	;UHL low order bits determine whether
MAP_X		.EQU	20h	;SHL Universe position
MAP_Y		.EQU	40h	;SHL
MAP_Z		.EQU	60h	;SHL
MAP_FLAGS	.EQU	80h	;UHW see below
MAP_ID		.equ	90h	;UHW
MAP_OBJ		.EQU	0a0h	;UHL if hi bit set, obj not created (lo 4 bits = damage count)
MAP_PREV	.EQU	0c0h	;UHL for list sorted in Z
MAP_NEXT	.EQU	0e0h	;UHL for list sorted in Z
MAP_SPAREL1	.equ	100h	;UHL
*endstruct

*struct PLAYER
************************************************************
*                                                          *
* PLAYER DATA STRUCTURE					   *
*                                                          *
************************************************************
POBJ		EQU	0000H	;UHL PLAYER OBJECT BLOCK
PSCRAD		EQU	0020H	;UHL PLAYER SCORE SCREEN ADDRESS
PSCORE		EQU	0040H	;UHL PLAYER SCORE
PNEXTREP	EQU	0060H	;UHL NEXT REPLAY LEVEL, 32 BITS BCD
PPID		EQU	0080H	;UHW PLAYER BASE PROCESS I.D.
PINITAB		EQU	0090H	;UHL PLAYER INITIALIZATION TABLE
PPALID		EQU	00B0H	;UHL PLAYER PALETTE I.D.
PCURSORXY	EQU	00D0H	;UHL CURRENT [Y,X] CURSOR POSITION
PLIVES		EQU	00F0H	;UHL CURRENT PLAYER LIFE ENERGY [INT,FRACTION]
PGUNPOWER	EQU	0110H	;UHW CURRENT AMOUNT OF GUN POWER
PBOMB1		EQU	0120H	;UHW COUNT OF SPECIAL WEAPON 1
PBOMB2		EQU	0130H	;UHW COUNT OF SPECIAL WEAPON 2
PBOMBTYPE	EQU	0140H	;UHW TYPE OF WEAPON ATTACHED TO THE BOMB BUTTON
PFIRING		EQU	0150H	;UHW IF <> 0 PLAYER IS FIRING HIS GUN. WAIT!
PENTER		EQU	0160H	;UHW IF = 1, PLAYER WILL ENTER GAME @ NEXT INPLAY
PDEAD		EQU	0170H	;UHW 1 IF DEAD MESSAGE UP
PGUNOFFTIME	EQU	0180H	;UHW Ticks gun coil must be off before firing again
PSTARTS		EQU	0190H	;UHW # OF STARTS THIS GAME
PWAVEST		EQU	01A0H	;UHW NUMBER OF PLAYER STARTS THIS WAVE
PWAVEDEATHS	EQU	01B0H	;UHW NUMBER OF DEATHS THIS WAVE
PWAVES		EQU	01C0H	;UHW NUMBER OF WAVES PLAYED THIS GAME
PEXTRAS		EQU	01D0H	;UHW NUMBER OF EXTRA LEFT TO EARN THIS GAME
PWAVETIME	EQU	01E0H	;UHL TIME THIS PLAYER HAS SPENT ON THIS WAVE
PLASTDTH	EQU	0200H	;UHL ELAPSED TIME SINCE LAST PLAYER DEATH
PITIME		EQU	0220H	;UHW TIME LEFT FOR ENTERING INITIALS
PWINGS		EQU	0230H	;UHW Number of wings owned by this player
PTOTTIME	EQU	0240H	;UHL TOTAL TIME OF THIS CREDIT
PLIFETIME	EQU	0260H	;UHL TIME THIS GUY HAS BEEN ALIVE
PSTARTESC	EQU	0280H	;UHW FLAG TO SHOW START BUTTON PUSHED FOR ESCAPE
PSWITCHESC	EQU	0290H	;UHW FLAG TO SHOW BUTTON ACTION
PENRGSIZ	EQU	02A0H	;UHL INC/DEC SIZE OF PLAYER ENERGY
PHITBOXUL	EQU	02C0H	;UHL [Y,X] UL SCREEN AREA TO SCORE HITS
PHITBOXLR	EQU	02E0H	;UHL [Y,X] LR SCREEN AREA TO SCORE HITS
PLASTLPLOT	EQU	0300H	;UHL LAST ENERGY LEVEL PLOTTED
PCLIPS		EQU	0320H	;UHW Current number of clips
PBULLETS	EQU	0330H	;UHW Bullets left in this clip
PDPRIORITY	EQU	0340H	;UHW CURRENT DISPLAY EFFECT PRIORITY
PDTIME		EQU	0350H	;UHW CURRENT DISPLAY EFFECT TIME
PGUNMULT	EQU	0360H	;UHL GUN ENERGY BAR MULTIPLIER
PINVINCIBLE	EQU	0380H	;UHW IF <> 0, PLAYER IS INVINCIBLE
PPOWERTYPE	EQU	0390H	;UHW TYPE OF CURRENT POWER-UP, 0 = NONE
PLAUNCHPOS	EQU	03A0H	;UHL [Y,X] SCREEN POSITION TO LAUNCH TRACERS 
PEBAROBJ	EQU	03C0H	;UHL PLAYER ENERGY BAR OBJECT
PEWORDOBJ	EQU	03E0H	;UHL PLAYER ENERGY WORD OBJECT
PGBAROBJ	EQU	0400H	;UHL PLAYER GUN BAR OBJECT
PGWORDOBJ	EQU	0420H	;UHL PLAYER GUN WORD OBJECT
PGMODEOBJ	EQU	0440H	;UHL PLAYER GUN MODE OBJECT
PGIRLS_SAVED	EQU	0460H	;UHW Number of girls saved this wave
PBONUSYNCH	EQU	0470H	;UHW BONUS RACKUP SYNCHRONISE BIT 
PSTATUSXY	EQU	0480H	;UHL [Y,X] POSITION OF PLAYER STATUS STUFF
PECOLOR		EQU	04A0H	;UHW CURRENT COLOR OF ENERGY BAR
PGUNCOOL	EQU	04B0H	;UHW AMOUNT OF GUN COOLANT (IN TICKS)
PDOBJ		EQU	04C0H	;UHL DISPLAY EFFECT OBJECT CURRENTLY EXISTING
PLASTFLASH	EQU	04E0H	;UHB LAST FLASH LAMP ACTIVATED
PROCKCNT	EQU	04E8H	;UHB NUMBER OF ROCKETS CURRENTLY ON SCREEN
PSECLIFE	EQU	04F0H	;UHL SECONDS PER LIFE UNIT, USED FOR MINTIME
PINITLIFE	EQU	0510H	;UHW INITIAL LIFE UNITS PER CREDIT, INT ONLY
PPLASMASHOTS	EQU	0520H	;UHW NUMBER OF PLASMA SHOTS LEFT FOR PLAYER
PPOWERHEADS	EQU	0530H	;UHW FLAGS FOR POWERUP HEADS-UP DISPLAYS
PLASTLED	EQU	0540H	;UHW WAVETIME OF LAST LED SCAN
PCHAR_COUNT	EQU	0550H	;UHB INITIAL CHARACTER POSITION
PCASUALTY	EQU	0558H	;UHB CASUALTIES THIS WAVE
PDAMAGE		EQU	0560H	;UHW BACKGROUND DAMAGE INFLICTED BY THIS GUY
PROCKSFIRED	EQU	0570H	;UHW NUMBER OF ROCKETS FIRED THIS COIN
PSCOREFLASH	EQU	0580H	;UHW SCORE BOX HIT FLASH FLAG

PRLAUNCHX	EQU	0590H	;UHW [X >> 8] WORLD POSITION TO LAUNCH ROCKETS
PTRACETIME	EQU	05A0H	;UHL TIME OF LAST TRACER CREATION
PBONUSCORE	EQU	05C0H	;UHL TOTAL BONUS SCORE
PBONUSOBJ	EQU	05E0H	;UHL TOTAL BONUS SCORE OBJECT
PBONUS_STOR	EQU	0600H	;UHL EACH BONUS FIGURE
PSHIELD		EQU	0620H	;UHL Current shield value
*endstruct

*
*PALETTE ENTRY DATA STRUCTURE
*struct	PALETTE
PALID	.SET	0		;UHL PALETTE I.D.
PALCNT	.SET	>20		;UHW PALETTE ALLOCATION COUNT
PALTIME	.SET	>30		;UHW TIME WHEN PAL WAS DELETED
*endstruct

*
* Berzerker Object data area
*	Note: Any fields named the same as the Coghead should
*		use the same offset.
*
*STRUCT BZERK+OBJ
OHITS		.EQU	ODATA		;UHL GUN HIT COUNTER:
					;0-7:P1 HITS, 8-15:P2 HITS
					;16-23:P3 HITS, 24-31:P4 HITS

OMISSES		.EQU	ODATA+020H	;UHB Number of consec. missed shots
OCHEWED_ROCKET	.EQU	ODATA+028H	;UHB Means that a rocket hit him
OBURSTCNT	.EQU	ODATA+030H	;UHB Number of bursts left, if hitting
ORAPIDCNT	.EQU	ODATA+038H	;UHB Current rapid fire shots left

ONO_STOP	.EQU	ODATA+060H	;UHB This is a non-stopper guy
OJUMPING	.EQU	ODATA+068H	;UHB We are currently jumping

OHRUN_DURATION	.EQU	ODATA+070H	;UHW Headon crazy run duration

OSRUNVEL	.EQU	ODATA+080H	;UHL SIDE RUN VELOCITY

OHRUNVEL	.EQU	ODATA+0A0H	;UHL HEADON RUN VELOCITY

OJUMP_SLEEP	.EQU	ODATA+0C0H	;UHW Remaining jump sleep
OEFLAGS		.EQU	ODATA+0D0H	;UHW ENEMY FLAGS

OJUMPTAB	.EQU	ODATA+0E0H	;UHL Table of Jump positions

OSHOOT_ANIM	.EQU	ODATA+100H	;UHL USE THIS ANIMATION TO SHOOT
ODEATH_ANIM	.EQU	ODATA+120H	;UHL USE THIS ANIMATION FOR DEATH
OSTOP_ANIM	.EQU	ODATA+160H	;UHL USE THIS ANIMATION FOR STOPPING

OSHOOT_TIME	.EQU	ODATA+180H	;UHW TIME SPENT SHOOTING
OLAST_BLOCK_TIME .EQU	ODATA+190H	;UHW TIME SINCE LAST BLOCK
OLAST_HIT_TIME	.EQU	ODATA+1A0H	;UHW TIME SINCE LAST BULLET HIT

OXORIG		.EQU	ODATA+1B0H	;UHW Origination universe X
OXLIMIT		.EQU	ODATA+1C0H	;UHW If <> 0 then this is X travel
OYENEMY		.EQU	ODATA+1D0H	;UHW Universe Y position of enemy

OXACCEL		.EQU	ODATA+1E0H	;SHW X acceleration
OZACCEL		.EQU	ODATA+1F0H	;SHW Z acceleration
*ENDSTRUCT

	
	
	
	
	
	
	
	
	
